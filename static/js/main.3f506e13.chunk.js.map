{"version":3,"sources":["components/MainActionButton.js","components/MusicInfo.js","components/NextPreviousTrack.js","components/Buttons.js","components/Video.js","components/Random.js","App.js","registerServiceWorker.js","index.js"],"names":["MainActionButton","props","react_default","a","createElement","className","index_es","onClick","handleMainSearch","style","height","backgroundColor","variant","size","MusicInfo","genre","artist","piece","toUpperCase","Icon_default","type","title","components_MainActionButton","label","trackItemNumber","tracksNumber","NextPreviousTrack","previousTrack","value","disabled","nextTrack","Buttons","styles","buttons_previousButton","marginRight","buttons_nextButton","videoIndex","videosLength","handleVideoIndex","Video","_onReady","event","_onEnd","_this$props","_this","videoId","this","YouTube","opts","width","playerVars","autoplay","onReady","onEnd","Component","Random","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","randomNumber","max","Math","floor","random","handleMainClick","setState","isLoading","buttonMessage","length","data","music","randomMusicGenreIndex","state","musicGenreIndex","randomMusic","musicGenre","artistsNumber","artists","randomArtistIndex","randomArtist","name","artistName","albumsNumbers","albums","randomAlbumIndex","randomAlbum","album","song","prepareURL","songsNumbers","songs","randomSongIndex","randomSong","pieceTitle","URL","concat","process","handleYoutubeAPI","waitForItems","playlistItems","Promise","resolve","items","forEach","item","j","position","snippet","contentDetails","wait","result","playlistId","id","axios","get","params","maxResults","part","key","then","res","videos","firstWait","results","types","i","kind","push","clickPreviousAndNextTrack","payload","_this$state","renderVideo","_this$state2","components_Video","components_NextPreviousTrack","setVideoIndex","status","_this$state3","isOnline","_this2","_this$state4","Fragment","components_MusicInfo","components_Buttons","color","thickness","App","Switch","Route","exact","path","component","React","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","theme","createMuiTheme","palette","primary","main","dark","secondary","render","core_styles","HashRouter","App_App","document","getElementById","origin","addEventListener","fetch","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3f506e13.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nfunction MainActionButton(props) {\n  const styles = {\n    mainActionButton: {\n      height: \"40px\",\n      backgroundColor: \"#ff9100\"\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <Button\n        onClick={() => props.handleMainSearch()}\n        style={styles.mainActionButton}\n        variant=\"extendedFab\"\n        size=\"medium\"\n      >\n        <div className=\"mainActionButton_title ff\">Roll the Wheel</div>\n      </Button>\n    </div>\n  );\n}\n\nexport default MainActionButton;\n","import React from \"react\";\nimport MainActionButton from \"./MainActionButton\";\nimport Icon from \"@material-ui/core/Icon\";\n\nfunction MusicInfo(props) {\n  const { genre, artist, piece } = props;\n  return (\n    <div className=\"musicInfo\">\n      <div className=\"wrapper\">\n        <div className=\"genre ff\">{genre.toUpperCase()}</div>\n      </div>\n      <div className=\"ninetyPercent wrapper\">\n        <div className=\"artistName ff\">{artist}</div>\n      </div>\n      <div className=\"ninetyPercent wrapper\">\n        <span>\n          <Icon>{piece.type === \"album\" ? \"album\" : \"music_note\"}</Icon>\n        </span>\n        <div className=\"title ff\">{piece.title}</div>\n      </div>\n      <MainActionButton handleMainSearch={() => props.handleMainSearch()} />\n    </div>\n  );\n}\n\nexport default MusicInfo;\n","import React from \"react\";\nimport { Chip, Icon, IconButton, Typography } from \"@material-ui/core\";\n\nconst label = (trackItemNumber, tracksNumber) => {\n  return (\n    <Typography variant=\"body1\">\n      {trackItemNumber + 1} / {tracksNumber}\n    </Typography>\n  );\n};\n\nfunction NextPreviousTrack(props) {\n    const { trackItemNumber, tracksNumber } = props;\n\n    return (\n      <div className=\"video_tracks_wrapper\">\n        <IconButton\n          onClick={() => props.previousTrack({ value: -1 })}\n          disabled={trackItemNumber === 0}\n        >\n          <Icon>skip_previous_button</Icon>\n        </IconButton>\n        <Chip label={label(trackItemNumber, tracksNumber)} variant=\"outlined\" />\n        <IconButton\n          onClick={() => props.nextTrack({ value: 1 })}\n          disabled={trackItemNumber === tracksNumber - 1}\n        >\n          <Icon>skip_next_button</Icon>\n        </IconButton>\n      </div>\n    );\n}\n\nexport default NextPreviousTrack;\n","import React  from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nfunction Buttons(props) {\n  const styles = {\n    buttons_previousButton: {\n      marginRight: \"10px\",\n      backgroundColor: \"#fff\"\n    },\n    buttons_nextButton: {\n      backgroundColor: \"#fff\"\n    }\n  };\n\n  const { videoIndex, videosLength } = props;\n\n  return (\n    <div className=\"buttons\">\n      <Button\n        variant=\"outlined\"\n        size=\"small\"\n        style={styles.buttons_previousButton}\n        disabled={videoIndex === 0}\n        onClick={() => props.handleVideoIndex(\"previous\")}\n      >\n        Previous\n      </Button>\n      <Button\n        variant=\"outlined\"\n        size=\"small\"\n        style={styles.buttons_nextButton}\n        disabled={videoIndex === videosLength - 1}\n        onClick={() => props.handleVideoIndex(\"next\")}\n      >\n        Next YouTube result\n      </Button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import React, { Component } from \"react\";\nimport YouTube from \"react-youtube\";\n\nclass Video extends Component {\n  _onReady = event => {\n    // console.log('_onReady');\n    // access to player in all event handlers via event.target\n    // event.target.pauseVideo();\n  };\n\n  _onEnd = () => {\n    const { trackItemNumber, tracksNumber } = this.props;\n    if (trackItemNumber < tracksNumber - 1) {\n      this.props.nextTrack({ value: 1 });\n    }\n  };\n\n  render() {\n    const { videoId } = this.props;\n    const opts = {\n      height: \"75%\",\n      width: \"100%\",\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        autoplay: 1\n      }\n    };\n    return (\n        <YouTube\n          videoId={videoId}\n          opts={opts}\n          onReady={this._onReady}\n          onEnd={this._onEnd}\n        />\n    );\n  }\n}\n\nexport default Video;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport MusicInfo from \"./MusicInfo\";\nimport NextPreviousTrack from \"./NextPreviousTrack\";\nimport Buttons from \"./Buttons\";\nimport Video from \"./Video\";\nimport data from \"./../data/musicData\";\nimport \"../App.scss\";\n\nclass Random extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      album: {},\n      artistName: \"\",\n      buttonMessage: \"\",\n      isOnline: true,\n      isLoading: true,\n      musicGenre: \"\",\n      musicGenreIndex: null,\n      song: {},\n      trackItemNumber: 0,\n      videoIndex: 0,\n      videos: [\n        {\n          videos: []\n        }\n      ],\n      videosLength: 0\n    };\n  }\n\n  componentDidMount() {\n    this.handleMainClick();\n  }\n\n  randomNumber = max => {\n    return Math.floor(Math.random() * max);\n  };\n\n  handleMainClick = () => {\n    this.setState({\n      isLoading: true,\n      trackItemNumber: 0,\n      buttonMessage: \"\",\n      videoIndex: 0\n    });\n    // 1. from data.length, choose one music type randomly\n    const length = data.music.length;\n    let randomMusicGenreIndex = this.randomNumber(length);\n    while (randomMusicGenreIndex === this.state.musicGenreIndex) {\n      randomMusicGenreIndex = this.randomNumber(length);\n    }\n    this.setState({ musicGenreIndex: randomMusicGenreIndex });\n    const randomMusic = data.music[randomMusicGenreIndex];\n    this.setState({ musicGenre: randomMusic.musicGenre }, () => {\n      // 2. Choose random artist from genre\n      const artistsNumber = randomMusic.artists.length;\n      const randomArtistIndex = this.randomNumber(artistsNumber);\n      const randomArtist = randomMusic.artists[randomArtistIndex].name;\n      this.setState({ artistName: randomArtist }, () => {\n        // 3. from specific artist, choose random album/song name.\n        const albumsNumbers =\n          randomMusic.artists[randomArtistIndex].albums.length;\n        if (!albumsNumbers) {\n          const songsNumbers =\n            randomMusic.artists[randomArtistIndex].songs.length;\n          const randomSongIndex = this.randomNumber(songsNumbers);\n          const randomSong =\n            randomMusic.artists[randomArtistIndex].songs[randomSongIndex];\n          this.setState({ song: randomSong, album: {} }, () => {\n            const { title } = this.state.song;\n            this.prepareURL(this.state.artistName, title);\n          });\n        } else {\n          const randomAlbumIndex = this.randomNumber(albumsNumbers);\n          const randomAlbum =\n            randomMusic.artists[randomArtistIndex].albums[randomAlbumIndex];\n          this.setState({ album: randomAlbum, song: {} }, () => {\n            const { title } = this.state.album;\n            this.prepareURL(this.state.artistName, title);\n          });\n        }\n      });\n    });\n  };\n\n  prepareURL = (artistName, pieceTitle) => {\n    let name = artistName === \"artistes divers\" ? \"\" : artistName;\n    const YOUTUBE_API_KEY = process.env.REACT_APP_YOUTUBE_API_KEY;\n    const URL = `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=10&q=${pieceTitle} ${name}&key=${YOUTUBE_API_KEY}`;\n    this.handleYoutubeAPI(URL);\n  };\n\n  waitForItems = playlistItems => {\n    return new Promise(resolve => {\n      let items = [];\n      playlistItems.forEach((item, j) => {\n        items[j] = {\n          type: \"playlistItem\",\n          position: item.snippet.position,\n          videoId: item.contentDetails.videoId,\n          title: item.snippet.title\n        };\n      });\n      resolve(items);\n    });\n  };\n\n  wait = result => {\n    return new Promise(resolve => {\n      let playlistId = result.id.playlistId;\n      const YOUTUBE_API_KEY = process.env.REACT_APP_YOUTUBE_API_KEY;\n      axios\n        .get(\"https://www.googleapis.com/youtube/v3/playlistItems\", {\n          params: {\n            maxResults: \"25\",\n            part: \"snippet,contentDetails\",\n            playlistId: playlistId,\n            key: YOUTUBE_API_KEY\n          }\n        })\n        .then(res => {\n          const playlistItems = res.data.items;\n          const length = playlistItems.length;\n          this.waitForItems(playlistItems).then(items => {\n            let videos = {\n              type: \"playlist\",\n              length,\n              playlistId,\n              videos: items\n            };\n            resolve(videos);\n          });\n        });\n    });\n  };\n\n  firstWait = results => {\n    return new Promise(resolve => {\n      let videos = [];\n      let types = [];\n      results.forEach((result, i) => {\n        if (result.id.kind === \"youtube#video\") {\n          types.push(\"video\");\n          videos[i] = {\n            type: \"video\",\n            videos: [\n              {\n                videoId: result.id.videoId,\n                title: result.snippet.title\n              }\n            ]\n          };\n          if (types.length === results.length) {\n            resolve(videos);\n          }\n        } else if (result.id.kind === \"youtube#playlist\") {\n          this.wait(result).then(res => {\n            videos[i] = res;\n            if (videos[0]) {\n              resolve(videos);\n            }\n          });\n        }\n      });\n    });\n  };\n\n  handleYoutubeAPI = URL => {\n    axios.get(URL).then(res => {\n      const results = res.data.items;\n      this.firstWait(results).then(res => {\n        this.setState({ videos: res, isLoading: false });\n      });\n    });\n  };\n\n  clickPreviousAndNextTrack = payload => {\n    const { trackItemNumber, videoIndex, videos } = this.state;\n    if (payload.value > 0 && trackItemNumber < videos[videoIndex].length - 1) {\n      this.setState({ trackItemNumber: trackItemNumber + payload.value });\n    } else if (payload.value < 0 && trackItemNumber > 0) {\n      this.setState({ trackItemNumber: trackItemNumber + payload.value });\n    }\n  };\n\n  renderVideo = () => {\n    const { videoIndex, videos, trackItemNumber } = this.state;\n    if (videos[videoIndex].type === \"video\") {\n      return (\n        <div className=\"video_video_wrapper\">\n          <Video videoId={videos[videoIndex].videos[0].videoId} />\n        </div>\n      );\n    } else if (videos[videoIndex].type === \"playlist\") {\n      return (\n        <div className=\"video_video_wrapper\">\n          <Video videoId={videos[videoIndex].videos[trackItemNumber].videoId}\n                 nextTrack={this.clickPreviousAndNextTrack}\n                 trackItemNumber={trackItemNumber}\n                 tracksNumber={videos[videoIndex].length}\n          />\n          <NextPreviousTrack\n            previousTrack={this.clickPreviousAndNextTrack}\n            nextTrack={this.clickPreviousAndNextTrack}\n            trackItemNumber={trackItemNumber}\n            tracksNumber={videos[videoIndex].length}\n          />\n        </div>\n      );\n    }\n  };\n\n  setVideoIndex = status => {\n    const { videoIndex, videos } = this.state;\n    if (status === \"next\") {\n      if (videoIndex < videos.length - 1) {\n        this.setState({ videoIndex: videoIndex + 1, buttonMessage: \"\" });\n      }\n    } else if (status === \"previous\") {\n      if (videoIndex > 0) {\n        this.setState({ videoIndex: videoIndex - 1, buttonMessage: \"\" });\n      }\n    }\n  };\n\n  render() {\n    const {\n      artistName,\n      buttonMessage,\n      isLoading,\n      musicGenre,\n      videos,\n      videoIndex\n    } = this.state;\n    const album = this.state.album\n      ? {\n        type: \"album\",\n        title: this.state.album.title\n      }\n      : null;\n    const song = this.state.song\n      ? {\n        type: \"song\",\n        title: this.state.song.title\n      }\n      : null;\n\n    return (\n      <React.Fragment>\n        <div className=\"global\">\n          <MusicInfo\n            genre={musicGenre}\n            artist={artistName}\n            piece={album.title ? album : song}\n            handleMainSearch={this.handleMainClick}\n          />\n          <Buttons\n            handleVideoIndex={status => this.setVideoIndex(status)}\n            videoIndex={videoIndex}\n            videosLength={videos.length}\n            buttonMessage={buttonMessage}\n          />\n          <div className=\"video\">\n            {isLoading ? (\n              <div className=\"video_circularProgress\">\n                <CircularProgress color=\"secondary\" thickness={3} size={100} />\n              </div>\n            ) : (\n              this.renderVideo()\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Random;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Random from './components/Random';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route exact path='/' component={Random} />\n      </Switch>\n    );\n  }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-snapshot\";\nimport { HashRouter } from 'react-router-dom'\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#fbe9e7\",\n      dark: \"#c8b7b5\"\n    },\n    secondary: {\n      main: \"#ff9100\"\n    }\n  }\n});\n\nrender(\n  <MuiThemeProvider theme={theme}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </MuiThemeProvider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}